var dom = require('../doms').android;
var View = require('../base_views').AndroidBaseView;

class RelativeLayout extends View {
  constructor(props, children) {
    super(props, children);

    this.setIds([
      'id'
    ]);
  }

  getChildWidth (props, parentWidth) {
    if (props.width) {
      props.width  += "";

      if (props.width.indexOf("match_parent") > -1){
        let values = props.width.split("/");
        let width = parentWidth;
        let weight;

        if (values.length > 1) {
          weight = values[1]*1;
          width = Math.round(parentWidth/weight);
        }

        return width*1;
      }

      return props.width;
    }

    return props.width;
  }

  getChildHeight (props, parentHeight) {
    if (props.height) {
      props.height  += "";

      if (props.height.indexOf("match_parent") > -1){
        let values = props.height.split("/");
        let height = parentHeight;
        let weight;

        if (values.length > 1) {
          weight = values[1]*1;
          height = Math.round(parentHeight/weight);
        }

        return height*1;
      }

      return props.height;
    }

    return props.height;
  }

  setPadding(params) {
    if (window.__OS == "IOS" && params.padding) {
      let values = params.padding.split(",");

      params.x = values[0];
      params.y = values[1];
      params.width = params.width*1 - values[0]*1 - values[2]*1;
      params.height = params.height*1 - values[1]*1 - values[3]*1;
    }
  }

  resolveChildren() {
    var _this = this;
    var width = this.props.width;
    var height = this.props.height;

    if (window.__OS == "IOS") {
      return this.children.map(function(child) {
        child.props.width = _this.getChildWidth(child.props, width);
        child.props.height = _this.getChildHeight(child.props, height);

        return child.render();
      });
    }

    return this.children.map(function(child) {
      child.__filename = _this.__filename;
      return  child.render();
    });
  }

  render() {
    var params = this.props;
    var _this = this;
    var children;

    this.setPadding(params);
    params.__filename = params.__source.fileName  + ' :ln ' + params.__source.lineNumber;
    children = this.resolveChildren();

    return (
      <relativeLayout
        id={this.props.id?this.props.id:this.idSet.id}
        params={params}>

        {children}

      </relativeLayout>
    )
  }
}

module.exports = RelativeLayout;
